{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\django-project\\\\cadastroclientes\\\\client\\\\src\\\\pages\\\\CadastroClientePage.jsx\";\nimport CadastroForm from '../features/clientes/CadastroForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CadastroClientePage() {\n  const handleSubmit = async data => {\n    // Aqui você manda os dados pra API, ex:\n    try {\n      const res = await fetch('http://localhost:3000/clientes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (!res.ok) {\n        const errorData = await res.json();\n        alert('Erro: ' + (errorData.error || 'Não foi possível cadastrar'));\n        return;\n      }\n      alert('Cliente cadastrado com sucesso!');\n    } catch (error) {\n      alert('Erro ao conectar com o servidor');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px'\n      },\n      children: \"Cadastro de Cliente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CadastroForm, {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = CadastroClientePage;\nvar _c;\n$RefreshReg$(_c, \"CadastroClientePage\");","map":{"version":3,"names":["CadastroForm","jsxDEV","_jsxDEV","CadastroClientePage","handleSubmit","data","res","fetch","method","headers","body","JSON","stringify","ok","errorData","json","alert","error","children","style","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/victo/django-project/cadastroclientes/client/src/pages/CadastroClientePage.jsx"],"sourcesContent":["import CadastroForm from '../features/clientes/CadastroForm';\r\n\r\nexport default function CadastroClientePage() {\r\n  const handleSubmit = async (data) => {\r\n    // Aqui você manda os dados pra API, ex:\r\n    try {\r\n      const res = await fetch('http://localhost:3000/clientes', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (!res.ok) {\r\n        const errorData = await res.json();\r\n        alert('Erro: ' + (errorData.error || 'Não foi possível cadastrar'));\r\n        return;\r\n      }\r\n      alert('Cliente cadastrado com sucesso!');\r\n    } catch (error) {\r\n      alert('Erro ao conectar com o servidor');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: 'center', marginBottom: '20px' }}>Cadastro de Cliente</h1>\r\n      <CadastroForm onSubmit={handleSubmit} />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,YAAY,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,eAAe,SAASC,mBAAmBA,CAAA,EAAG;EAC5C,MAAMC,YAAY,GAAG,MAAOC,IAAI,IAAK;IACnC;IACA,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QACxDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;MAC3B,CAAC,CAAC;MAEF,IAAI,CAACC,GAAG,CAACO,EAAE,EAAE;QACX,MAAMC,SAAS,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;QAClCC,KAAK,CAAC,QAAQ,IAAIF,SAAS,CAACG,KAAK,IAAI,4BAA4B,CAAC,CAAC;QACnE;MACF;MACAD,KAAK,CAAC,iCAAiC,CAAC;IAC1C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdD,KAAK,CAAC,iCAAiC,CAAC;IAC1C;EACF,CAAC;EAED,oBACEd,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAIiB,KAAK,EAAE;QAAEC,SAAS,EAAE,QAAQ;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAH,QAAA,EAAC;IAAmB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClFvB,OAAA,CAACF,YAAY;MAAC0B,QAAQ,EAAEtB;IAAa;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV;AAACE,EAAA,GA3BuBxB,mBAAmB;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}